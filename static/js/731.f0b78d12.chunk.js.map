{"version":3,"file":"static/js/731.f0b78d12.chunk.js","mappings":"gLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BAA5I,EAAgL,yBAAhL,EAAkN,wB,mBCalN,EAVmB,SAACA,GAChB,IAAIC,EAAO,WAAaD,EAAME,GAE9B,OACI,gBAAKC,UAAWC,EAAiB,IAAMA,EAAvC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAME,UAAWC,EAA9B,SAA+CJ,EAAMM,UCAjE,EANgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAhB,SAAkCJ,EAAMO,WCqDhD,EArDgB,SAACP,GAEb,IAAIQ,EAAkBR,EAAMS,YAAYC,QACnCC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYN,KAAMM,EAAON,KAAMJ,GAAIU,EAAOV,IAASU,EAAOV,OAEzEW,EAAmBb,EAAMS,YAAYK,SACpCH,KAAI,SAAAJ,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQL,OAEhEa,EAAcC,EAAAA,YAalB,OAEI,iBAAKb,UAAWC,EAAhB,WAGI,gBAAKD,UAAWC,EAAhB,SAEKI,KAIL,iBAAKL,UAAWC,EAAhB,WAEI,yBAAMS,KAEN,4BACI,0BACQ,qBAAUI,YAAY,qBAAqBC,SA5BzC,WACtB,IAAIC,EAAQJ,EAAYK,QAAQD,MAChCnB,EAAMqB,kBAAkBF,IA0BsEG,IAAKP,EACrEI,MAAOnB,EAAMS,YAAYc,oBAG3C,0BACI,mBAAQC,QA5BX,WACbxB,EAAMyB,cA2BU,sC,8BCtBxB,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KApBkB,SAACC,GAEnB,MAAO,CACJnB,YAAamB,EAAMnB,gBAID,SAACoB,GACtB,MAAO,CACHR,kBAAmB,SAACF,GAChBU,GAASC,EAAAA,EAAAA,IAAkCX,KAG/CM,WAAY,WACRI,GAASE,EAAAA,EAAAA,YAOjBC,EAAAA,EAFJ,CAGEC","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__SrBSh\",\"dialogsItems\":\"Dialogs_dialogsItems__W1PSt\",\"active\":\"Dialogs_active__3vzYu\",\"messages\":\"Dialogs_messages__-dMb7\",\"message\":\"Dialogs_message__Bh+gP\",\"dialog\":\"Dialogs_dialog__1NGi6\"};","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialog/\" + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path} className={classes.dialog}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/> );\r\n\r\n    let messagesElements = props.dialogsPage.messages\r\n        .map(message => <Message message={message.message} key={message.id}/>);\r\n\r\n    let textareaRef = React.createRef();\r\n\r\n    let onChangeMessageText = () => {\r\n        let value = textareaRef.current.value;\r\n        props.changeMessageText(value);\r\n    }\r\n\r\n    let addMessage = () => {\r\n        props.addMessage();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.dialogs}>\r\n\r\n\r\n            <div className={classes.dialogsItems}>\r\n\r\n                {dialogsElements}\r\n\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n\r\n                <div>{messagesElements}</div>\r\n\r\n                <div>\r\n                    <div>\r\n                            <textarea placeholder='Enter your message' onChange={onChangeMessageText} ref={textareaRef}\r\n                                      value={props.dialogsPage.newMessageText}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button onClick={addMessage}>Send message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n       dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeMessageText: (value) => {\r\n            dispatch(updateNewMessageTextActionCreator(value));\r\n        },\r\n\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","className","classes","to","name","message","dialogsElements","dialogsPage","dialogs","map","dialog","messagesElements","messages","textareaRef","React","placeholder","onChange","value","current","changeMessageText","ref","newMessageText","onClick","addMessage","compose","connect","state","dispatch","updateNewMessageTextActionCreator","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}